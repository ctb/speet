[tox]
envlist =
  py35,
  py36,
  py37,
  coverage,
  fix_lint,
#  docs,
  package_description
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = run the tests with pytest under {basepython}
setenv = PIP_DISABLE_VERSION_CHECK = 1
         COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
         VIRTUALENV_NO_DOWNLOAD = 1
passenv = http_proxy https_proxy no_proxy SSL_CERT_FILE PYTEST_*
deps =
  pip >= 19.1
extras = testing
commands = pytest \
           --cov "{envsitepackagesdir}/speet" \
           --cov-config "{toxinidir}/tox.ini" \
           --junitxml {toxworkdir}/junit.{envname}.xml \
           {posargs:.}

[tox:.package]
basepython = python3

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
basepython = python3.7
extras = docs
commands = sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
           python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:package_description]
description = check that the long description is valid
basepython = python3.7
changedir = {toxinidir}
deps = twine >= 1.12.1
       # TODO installing readme-renderer[md] should not be necessary
       readme-renderer[md] >= 24.0
       pip >= 19.1
skip_install = true
extras =
commands = pip wheel -w {envtmpdir}/build --no-deps .
           twine check {envtmpdir}/build/*

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
basepython = python3.7
passenv = {[testenv]passenv}
          # without PROGRAMDATA cloning using git for Windows will fail with an
          # `error setting certificate verify locations` error
          PROGRAMDATA
extras = lint
deps = pre-commit >= 1.14.4, < 2
skip_install = True
commands = pre-commit run --all-files --show-diff-on-failure
           python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps = {[testenv]deps}
       coverage >= 4.4.1, < 5
       diff_cover
skip_install = True
passenv = {[testenv]passenv}
          DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands = coverage combine
           coverage report -m
           coverage xml -o {toxworkdir}/coverage.xml
           coverage html -d {toxworkdir}/htmlcov
           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends = py27, py34, py35, py36, py37, pypy, pypy3
parallel_show_output = True

[testenv:codecov]
description = [only run on CI]: upload coverage data to codecov (depends on coverage running first)
passenv = {[testenv]passenv}
          CODECOV_TOKEN
          CI
          TRAVIS
          TRAVIS_*
deps = codecov
skip_install = True
changedir = {toxinidir}
depends = coverage
commands = codecov --file "{toxworkdir}/coverage.xml" {posargs}

[coverage:run]
branch = true
parallel = true

[travis]
python =
  3.7: py37, fix_lint, docs, package_description
